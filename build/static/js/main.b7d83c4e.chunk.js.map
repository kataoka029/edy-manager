{"version":3,"sources":["components/App/NavBar/index.js","components/App/MessageContainer/LeftColumn/User/index.js","config.js","utils/index.js","components/App/MessageContainer/LeftColumn/index.js","components/App/MessageContainer/CenterColumn/Messages/Message/index.js","components/App/MessageContainer/CenterColumn/Messages/index.js","components/App/MessageContainer/CenterColumn/EdyInput/index.js","components/App/MessageContainer/CenterColumn/index.js","components/App/MessageContainer/RightColumn/index.js","components/App/MessageContainer/index.js","components/App/OrderContainer/index.js","components/App/index.js","redux/reducer.js","redux/store.js","index.js","img/panda-right.png"],"names":["NavBar","className","User","props","selected","data-user-id","userId","to","link","userText","lineUserId","config","url","fetchUsers","dispatch","fetch","then","res","json","data","type","users","console","log","catch","err","fetchMessages","messages","insertMessage","events","a","method","headers","body","JSON","stringify","sendMessage","LeftColumn","useDispatch","useSelector","state","useEffect","map","user","index","key","Message","message","line_user_type","line_message_text","socket","io","connect","Messages","on","event","source","off","EdyInput","input","pushMessage","replyToken","id","text","onClick","placeholder","onChange","e","target","value","CenterColumn","RightColumn","src","pandaRight","alt","MessageContainer","match","params","OrderContainer","App","exact","path","component","initialState","reducer","action","store","createStore","ReactDOM","render","document","querySelector","module","exports"],"mappings":"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","file":"static/js/main.b7d83c4e.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.scss\";\n\nconst NavBar = () => {\n  return (\n    <header>\n      <h1 className=\"title\">EDY MANAGER</h1>\n      <nav>\n        <ul className=\"menu\">\n          <li>XXXX</li>\n          <li>XXXX</li>\n          <li>XXXX</li>\n          <li>XXXX</li>\n        </ul>\n      </nav>\n    </header>\n  );\n};\n\nexport default NavBar;\n","import React from \"react\";\nimport \"./style.scss\";\nimport { Link } from \"react-router-dom\";\n\nconst User = (props) => {\n  return (\n    <div\n      className={props.selected ? \"user selected\" : \"user\"}\n      data-user-id={props.userId}\n    >\n      <Link to={props.link}>\n        <div className=\"user-id\">{props.userId > 0 ? props.userId : \"-\"}</div>\n        <div className=\"text\">{props.userText}</div>\n        <div className=\"line-user-id\">{props.lineUserId}</div>\n      </Link>\n    </div>\n  );\n};\n\nexport default User;\n","const config = {};\n\nconfig.url =\n  process.env.NODE_ENV === \"production\"\n    ? \"https://edy-bot.herokuapp.com/\"\n    : \"http://localhost:4000/\";\n\nexport default config;\n","import config from \"../config\";\nconst url = config.url;\n\nexport const fetchUsers = (dispatch) => {\n  fetch(`${url}api/users/`)\n    .then((res) => res.json())\n    .then((data) => {\n      dispatch({\n        type: \"SET_USERS\",\n        users: data,\n      });\n    })\n    .then(() => console.log(\"ERROR/ fetchMessages()/ \"))\n    .catch((err) => console.log(err));\n};\n\nexport const fetchMessages = (dispatch, lineUserId) => {\n  fetch(`${url}api/messages/${lineUserId}`)\n    .then((res) => res.json())\n    .then((data) => {\n      dispatch({\n        type: \"SET_MESSAGES\",\n        messages: data,\n      });\n    })\n    .then(() => console.log(\"SUCCESS/ fetchMessages()/ \"))\n    .catch((err) => console.log(\"ERROR/ fetchMessages()/ \", err));\n};\n\nexport const insertMessage = async (events) => {\n  await fetch(`${url}api/messages`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(events),\n  })\n    .then(() => console.log(\"SUCCESS/ insertMessage()/ \"))\n    .catch((err) => console.log(\"ERROR/ insertMessage()/ \", err));\n};\n\nexport const sendMessage = (events, lineUserId) => {\n  fetch(`${url}api/messages/${lineUserId}`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(events),\n  })\n    .then(() => console.log(\"SUCCESS/ sendMessage()/ \"))\n    .catch((err) => console.log(\"ERROR/ sendMessage()/ \", err));\n};\n","import React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport User from \"./User\";\nimport \"./style.scss\";\nimport { fetchUsers } from \"../../../../utils\";\n\nconst LeftColumn = () => {\n  const dispatch = useDispatch();\n  const users = useSelector((state) => state.users);\n  const lineUserId = useSelector((state) => state.lineUserId);\n\n  useEffect(() => {\n    fetchUsers(dispatch);\n  }, []);\n\n  return (\n    <div className=\"left-column\">\n      {users.map((user, index) => {\n        return (\n          <User\n            link={`/messages/${user.lineUserId}`}\n            lineUserId={user.lineUserId}\n            userId={user.userId}\n            userText={user.userText}\n            selected={lineUserId === user.lineUserId ? true : false}\n            key={`user${index}`}\n          />\n        );\n      })}\n    </div>\n  );\n};\n\nexport default LeftColumn;\n","import React from \"react\";\nimport \"./style.scss\";\n\nconst Message = (props) => {\n  const className =\n    props.message.line_user_type === \"user\" ? \"left-message\" : \"right-message\";\n  return (\n    <div className={`message ${className}`}>\n      {props.message.line_message_text}\n    </div>\n  );\n};\n\nexport default Message;\n","import React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Message from \"./Message\";\nimport config from \"../../../../../config\";\nimport \"./style.scss\";\n\nimport { fetchMessages, fetchUsers } from \"../../../../../utils\";\n\n// socket.io-clientの設定;\nimport io from \"socket.io-client\";\nconst socket = io.connect(config.url);\n\nconst Messages = () => {\n  const dispatch = useDispatch();\n  const messages = useSelector((state) => state.messages);\n  const lineUserId = useSelector((state) => state.lineUserId);\n\n  // [lineUserId]は必須\n  useEffect(() => {\n    fetchMessages(dispatch, lineUserId);\n  }, [lineUserId]);\n\n  // [lineUserId]\n  useEffect(() => {\n    socket.on(\"refetch\", (data) => {\n      console.log(`UID: ${data.event.source.userId}`);\n      fetchMessages(dispatch, lineUserId);\n      fetchUsers(dispatch);\n    });\n    return () => {\n      socket.off(\"refetch\");\n    };\n  }, [lineUserId]);\n\n  return messages.map((message, index) => (\n    <Message message={message} key={`message${index}`} />\n  ));\n};\n\nexport default Messages;\n","import React from \"react\";\nimport \"./style.scss\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\n// import config from \"../../../../../config\";\nimport {\n  insertMessage,\n  fetchMessages,\n  fetchUsers,\n  sendMessage,\n} from \"../../../../../utils\";\n\nconst EdyInput = () => {\n  const dispatch = useDispatch();\n  const input = useSelector((state) => state.input);\n  const lineUserId = useSelector((state) => state.lineUserId);\n\n  const pushMessage = async () => {\n    const events = [];\n    events[0] = {\n      type: \"message\",\n      replyToken: \"_\",\n      source: {\n        userId: lineUserId,\n        type: \"edy\",\n      },\n      message: {\n        id: \"_\",\n        type: \"text\",\n        text: input,\n      },\n    };\n\n    // DBに入れる\n    await insertMessage(events);\n\n    // users&messagesを更新する\n    fetchUsers(dispatch);\n    fetchMessages(dispatch, lineUserId);\n\n    // LINEに送る\n    sendMessage(events, lineUserId);\n  };\n\n  return (\n    <div className=\"edy-input\">\n      <div className=\"menu-bar\">\n        <a className=\"mood\">\n          <span className=\"material-icons\">mood</span>\n        </a>\n        <a className=\"attachment\">\n          <span className=\"material-icons\">attachment</span>\n        </a>\n        <a className=\"reply\">\n          <span className=\"material-icons\" onClick={pushMessage}>\n            reply\n          </span>\n        </a>\n      </div>\n      <textarea\n        className=\"text\"\n        placeholder=\"メッセージを入力\"\n        onChange={(e) =>\n          dispatch({ type: \"HANDLE_INPUT\", input: e.target.value })\n        }\n      ></textarea>\n    </div>\n  );\n};\n\nexport default EdyInput;\n","import React from \"react\";\nimport \"./style.scss\";\nimport Messages from \"./Messages\";\nimport EdyInput from \"./EdyInput\";\n\nconst CenterColumn = () => {\n  return (\n    <div className=\"center-column\">\n      <div className=\"messages\">\n        <Messages />\n      </div>\n      <EdyInput />\n    </div>\n  );\n};\n\nexport default CenterColumn;\n","import React from \"react\";\nimport \"./style.scss\";\nimport pandaRight from \"../../../../img/panda-right.png\";\n\nconst RightColumn = () => {\n  return (\n    <div className=\"right-column\">\n      <section className=\"under-construction\">\n        <p>ユーザーの詳細を表示させたく、これから頑張って作ります。</p>\n        <img src={pandaRight} alt=\"pandRight\" />\n      </section>\n    </div>\n  );\n};\n\nexport default RightColumn;\n","import React, { useEffect } from \"react\";\nimport \"./style.scss\";\nimport LeftColumn from \"./LeftColumn\";\nimport CenterContainer from \"./CenterColumn\";\nimport RightColumn from \"./RightColumn\";\nimport { useDispatch } from \"react-redux\";\n\nconst MessageContainer = (props) => {\n  const dispatch = useDispatch();\n  const lineUserId = props.match.params.lineUserId;\n\n  useEffect(() => {\n    dispatch({\n      type: \"SET_LINEUSERID\",\n      lineUserId,\n    });\n  }, [lineUserId]);\n\n  return (\n    <div className=\"message-container\">\n      <LeftColumn />\n      <CenterContainer />\n      <RightColumn />\n    </div>\n  );\n};\n\nexport default MessageContainer;\n","import React from \"react\";\nimport \"./style.scss\";\n\nconst OrderContainer = () => {\n  return (\n    <div className=\"order-container\">\n      <p>ここにはオーダー情報が入ります。</p>\n    </div>\n  );\n};\n\nexport default OrderContainer;\n","import React from \"react\";\nimport NavBar from \"./NavBar\";\nimport MessageContainer from \"./MessageContainer\";\nimport OrderContainer from \"./OrderContainer\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport \"./style.scss\";\n\nconst App = () => {\n  return (\n    <>\n      <NavBar />\n      <Router>\n        <Route exact path=\"/\" component={MessageContainer} />\n        <Route path=\"/messages/:lineUserId\" component={MessageContainer} />\n        <Route path=\"/orders\" component={OrderContainer} />\n      </Router>\n    </>\n  );\n};\n\nexport default App;\n","const initialState = {\n  messages: [],\n  input: \"\",\n  users: [],\n  lineUserId: \"\",\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"SET_MESSAGES\":\n      return { ...state, messages: action.messages };\n    case \"ADD_MESSAGE\":\n      return { ...state, messages: [...state.messages, action.message] };\n    case \"SET_USERS\":\n      return { ...state, users: action.users };\n    case \"SET_LINEUSERID\":\n      return { ...state, lineUserId: action.lineUserId };\n    case \"HANDLE_INPUT\":\n      return { ...state, input: action.input };\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import { createStore } from \"redux\";\nimport reducer from \"./reducer\";\n\nconst store = createStore(reducer);\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport App from \"./components/App/\";\nimport \"./reset.css\";\nimport store from \"./redux/store.js\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.querySelector(\"#root\")\n);\n","module.exports = __webpack_public_path__ + \"static/media/panda-right.0bfc58cc.png\";"],"sourceRoot":""}